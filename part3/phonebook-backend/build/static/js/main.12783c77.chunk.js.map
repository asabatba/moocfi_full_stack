{"version":3,"sources":["api.js","Form.js","Persons.js","App.js","index.js"],"names":["baseUrl","getAll","a","Axios","get","then","r","data","catch","err","console","error","create","person","post","update","id","put","remove","delete","Form","persons","setPersons","setMessage","updatePerson","updatedPerson","api","map","p","content","name","type","setTimeout","log","response","filter","useState","newName","setNewName","newNumber","setNewNumber","value","onChange","ev","target","onClick","preventDefault","number","existingPerson","find","undefined","concat","window","confirm","Number","removeId","Persons","toLowerCase","includes","key","App","setFilter","message","useEffect","msgClasses","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAGMA,EAAU,eAgCD,GACXC,OA/BQ,uCAAG,sBAAAC,EAAA,+EAEJC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GAAD,OAC3BA,EAAEC,QACJC,OAAM,SAACC,GACLC,QAAQC,MAAMF,OALP,2CAAH,qDAgCRG,OAvBQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,+EAEJC,IAAMW,KAAKd,EAASa,GAAQR,MAAK,SAACC,GAAD,OACpCA,EAAEC,SAHK,2CAAH,sDAwBRQ,OAjBQ,uCAAG,WAAOC,EAAIH,GAAX,SAAAX,EAAA,+EAEJC,IAAMc,IAAN,UAAajB,EAAb,YAAwBgB,GAAMH,GAAQR,MAAK,SAACC,GAAD,OAC9CA,EAAEC,SAHK,2CAAH,wDAkBRW,OAXQ,uCAAG,WAAOF,GAAP,SAAAd,EAAA,+EAEJC,IAAMgB,OAAN,UAAgBnB,EAAhB,YAA2BgB,IAAMX,MAAK,SAAAC,GAAC,OAC1CA,EAAEC,SAHK,2CAAH,uDC6BGa,G,MApDF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAuB3BC,EAAe,SAACR,EAAIS,GAEtBC,EAAIX,OAAOC,EAAIS,GAAepB,MAAK,SAAAE,GAC/Be,EAAWD,EAAQM,KAAI,SAACC,GAAD,OAAOA,EAAEZ,KAAOA,EAAKT,EAAOqB,MACnDL,EAAW,CAAEM,QAAQ,4BAAD,OAA8BtB,EAAKuB,KAAnC,KAA4CC,KAAM,SACtEC,YAAW,WAAQT,EAAW,CAAEM,QAAS,KAAME,KAAM,WAAa,QACnEvB,OAAM,SAACC,GACNC,QAAQuB,IAAIxB,EAAIyB,UAChBZ,EAAWD,EAAQc,QAAO,SAACP,GAAD,OAAOA,EAAEZ,KAAOA,MAC1CO,EAAW,CAAEM,QAAQ,aAAD,OAAeJ,EAAcK,KAA7B,WAA4CC,KAAM,UACtEC,YAAW,WAAQT,EAAW,CAAEM,QAAS,KAAME,KAAM,YAAc,SAjCzB,EAqCpBK,mBAAS,IArCW,mBAqC3CC,EArC2C,KAqClCC,EArCkC,OAsChBF,mBAAS,IAtCO,mBAsC3CG,EAtC2C,KAsChCC,EAtCgC,KAwClD,OAAQ,8BACJ,sCACU,2BAAOC,MAAOJ,EAASK,SAAU,SAACC,GAAD,OAAQL,EAAWK,EAAGC,OAAOH,UACpE,6BAFJ,WAGY,2BAAOA,MAAOF,EAAWG,SAAU,SAACC,GAAD,OAAQH,EAAaG,EAAGC,OAAOH,WAE9E,6BACI,4BAAQV,KAAK,SAASc,QA7CT,SAACF,GAClBA,EAAGG,iBACH,IAAMjC,EAAS,CAAEiB,KAAMO,EAASU,OAAQR,GAElCS,EAAiB3B,EAAQ4B,MAAK,SAACrB,GAAD,OAAOA,EAAEE,OAASO,UAC/Ba,IAAnBF,EAOJtB,EAAId,OAAOC,GACNR,MAAK,SAAAE,GACFG,QAAQuB,IAAI1B,GACZe,EAAWD,EAAQ8B,OAAO5C,IAC1BgB,EAAW,CAAEM,QAAQ,UAAD,OAAYtB,EAAKuB,KAAjB,sBAA2CC,KAAM,SACrEC,YAAW,WAAQT,EAAW,CAAEM,QAAS,KAAME,KAAM,WAAa,QAVlEqB,OAAOC,QAAP,mBAA2BhB,EAA3B,mDACAb,EAAawB,EAAehC,GAAIH,KAqCpC,WCtCNyC,G,MAAS,SAAC,GAA0B,IAAxBzC,EAAuB,EAAvBA,OAAQ0C,EAAe,EAAfA,SAOtB,OACI,6BAAM1C,EAAOiB,KAAb,MAAsBjB,EAAOkC,OAA7B,IAAqC,4BAAQF,QAN7B,WACZO,OAAOC,QAAP,uCAA+CxC,EAAOiB,KAAtD,qBACAyB,EAAS1C,EAAOG,MAIiB,aAI9BwC,EArBC,SAAC,GAAmC,IAAjCnC,EAAgC,EAAhCA,QAASc,EAAuB,EAAvBA,OAAQoB,EAAe,EAAfA,SAChC,OAAQ,6BACHlC,EACIc,QAAO,SAACP,GAAD,OAAQA,EAAEE,KAAK2B,cAAcC,SAASvB,EAAOsB,kBACpD9B,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAQ+B,IAAK/B,EAAEE,KAAMjB,OAAQe,EAAG2B,SAAUA,SCsCnDK,EAvCH,WAAO,IAAD,EACgBxB,mBAAS,IADzB,mBACPf,EADO,KACEC,EADF,OAEcc,mBAAS,IAFvB,mBAEPD,EAFO,KAEC0B,EAFD,OAGgBzB,mBAAS,CAAEP,QAAS,KAAME,KAAM,SAHhD,mBAGP+B,EAHO,KAGEvC,EAHF,KAMdwC,qBAAU,WAMUrC,EAAIzB,SACZI,MALa,SAAAE,GACjBe,EAAWf,QAMhB,IAEH,IAKMyD,EAAa,WAAcF,EAAQ/B,KAAQ,KAA0B,MAAnB+B,EAAQjC,QAAkB,UAAY,IAE9F,OACI,6BACI,yCACA,yBAAKoC,UAAWD,GAAaF,EAAQjC,SACrC,gDACA,2BAAOY,MAAON,EAAQO,SAAU,SAACC,GAAD,OAAQkB,EAAUlB,EAAGC,OAAOH,UAC5D,8CACA,kBAAC,EAAD,CAAMpB,QAASA,EAASC,WAAYA,EAAYC,WAAYA,IAC5D,uCACA,kBAAC,EAAD,CAASF,QAASA,EAASc,OAAQA,EAAQoB,SAhBlC,SAACvC,GAAD,OACbU,EAAIR,OAAOF,GAAIX,MAAK,SAAAE,GAChBe,EAAWD,EAAQc,QAAO,SAAAP,GAAC,OAAIA,EAAEZ,KAAOA,cCvBpDkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.12783c77.chunk.js","sourcesContent":["\r\nimport Axios from 'axios';\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = async () => {\r\n\r\n    return Axios.get(baseUrl).then((r) =>\r\n        r.data\r\n    ).catch((err) => {\r\n        console.error(err);\r\n    });\r\n}\r\n\r\nconst create = async (person) => {\r\n\r\n    return Axios.post(baseUrl, person).then((r) =>\r\n        r.data\r\n    );\r\n}\r\n\r\nconst update = async (id, person) => {\r\n\r\n    return Axios.put(`${baseUrl}/${id}`, person).then((r) =>\r\n        r.data\r\n    );\r\n}\r\n\r\nconst remove = async (id) => {\r\n\r\n    return Axios.delete(`${baseUrl}/${id}`).then(r =>\r\n        r.data\r\n    );\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","\r\nimport React, { useState } from 'react';\r\nimport api from './api';\r\n\r\n\r\nconst Form = ({ persons, setPersons, setMessage }) => {\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const person = { name: newName, number: newNumber }\r\n\r\n        const existingPerson = persons.find((p) => p.name === newName)\r\n        if (existingPerson !== undefined) {\r\n\r\n            if (window.confirm(`The name ${newName} has already been added. Update phone number?`))\r\n                updatePerson(existingPerson.id, person)\r\n\r\n            return;\r\n        }\r\n        api.create(person)\r\n            .then(data => {\r\n                console.log(data);\r\n                setPersons(persons.concat(data))\r\n                setMessage({ content: `Added '${data.name}' to the phonebook`, type: 'info' })\r\n                setTimeout(() => { setMessage({ content: null, type: 'info' }) }, 3000)\r\n            })\r\n    }\r\n\r\n    const updatePerson = (id, updatedPerson) => {\r\n\r\n        api.update(id, updatedPerson).then(data => {\r\n            setPersons(persons.map((p) => p.id === id ? data : p))\r\n            setMessage({ content: `Updated listed phone of '${data.name}'`, type: 'info' })\r\n            setTimeout(() => { setMessage({ content: null, type: 'info' }) }, 3000)\r\n        }).catch((err) => {\r\n            console.log(err.response)\r\n            setPersons(persons.filter((p) => p.id !== id))\r\n            setMessage({ content: `Update of ${updatedPerson.name} failed`, type: 'error' })\r\n            setTimeout(() => { setMessage({ content: null, type: 'error' }) }, 3000)\r\n        })\r\n    }\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n\r\n    return (<form>\r\n        <div>\r\n            Name: <input value={newName} onChange={(ev) => setNewName(ev.target.value)} />\r\n            <br />\r\n            Number: <input value={newNumber} onChange={(ev) => setNewNumber(ev.target.value)} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" onClick={handleSubmit}>add</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nexport default Form","\r\nimport React from 'react';\r\nimport './Persons.css';\r\n\r\n\r\nconst Persons = ({ persons, filter, removeId }) => {\r\n    return (<div>\r\n        {persons\r\n            .filter((p) => (p.name.toLowerCase().includes(filter.toLowerCase())))\r\n            .map((p) => <Number key={p.name} person={p} removeId={removeId}></Number>)}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Number = ({ person, removeId }) => {\r\n\r\n    const handleClick = () => {\r\n        if (window.confirm(`Do you really want to remove ${person.name} from the list?`))\r\n            removeId(person.id);\r\n    }\r\n\r\n    return (\r\n        <div>{person.name} ~ {person.number} <button onClick={handleClick}>delete</button></div>\r\n    )\r\n}\r\n\r\nexport default Persons","\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from './api';\r\nimport './App.css';\r\nimport Form from './Form';\r\nimport Persons from './Persons';\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [filter, setFilter] = useState('')\r\n    const [message, setMessage] = useState({ content: null, type: 'info' }) // info or error\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const eventHandler = data => {\r\n            setPersons(data)\r\n        }\r\n\r\n        const promise = api.getAll();\r\n        promise.then(eventHandler)\r\n\r\n    }, [])\r\n\r\n    const removeId = (id) =>\r\n        api.remove(id).then(data => {\r\n            setPersons(persons.filter(p => p.id !== id));\r\n        })\r\n\r\n    const msgClasses = 'message ' + (message.type) + ' ' + (message.content != null ? ' active' : '');\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <div className={msgClasses}>{message.content}</div>\r\n            <h3>Filter phonebook</h3>\r\n            <input value={filter} onChange={(ev) => setFilter(ev.target.value)}></input>\r\n            <h3>Add new people</h3>\r\n            <Form persons={persons} setPersons={setPersons} setMessage={setMessage}></Form>\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons} filter={filter} removeId={removeId}></Persons>\r\n            {/* <button onClick={() => { setMessage('hey'); setShowMessage(true) }}>test</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}